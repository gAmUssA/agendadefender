name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      # macOS specific setup
      - name: Install macOS dependencies
        if: matrix.os == 'macos-latest'
        run: |
          if [ ! -d "icon/agenda-defender.iconset" ]; then
            mkdir -p icon/agenda-defender.iconset
            cd icon
            chmod +x convert-icons.sh
            ./convert-icons.sh
          fi

      # Build and release the app
      - name: Build and release
        env:
          # This is used for uploading release assets
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            npm run build -- --win --x64
          elif [ "$RUNNER_OS" == "macOS" ]; then
            npm run build -- --mac --universal
          else
            npm run build -- --linux AppImage
          fi
        shell: bash

      # Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-artifacts
          path: |
            dist/*.exe
            dist/*.dmg
            dist/*.zip
            dist/*.AppImage
          if-no-files-found: ignore

  # Create GitHub Release
  create-release:
    needs: release
    # Only create release when pushing tags
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false
          files: |
            *-artifacts/*.exe
            *-artifacts/*.dmg
            *-artifacts/*.zip
            *-artifacts/*.AppImage
          generate_release_notes: true
